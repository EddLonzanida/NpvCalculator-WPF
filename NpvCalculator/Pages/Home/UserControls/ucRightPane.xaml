<UserControl x:Class="NpvCalculator.Pages.Home.UserControls.ucRightPane"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:chartingToolkit="clr-namespace:System.Windows.Controls.DataVisualization.Charting;assembly=System.Windows.Controls.DataVisualization.Toolkit"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
             mc:Ignorable="d" 
             d:DesignHeight="250" d:DesignWidth="500">
    <UserControl.Resources>
        <Style x:Key="NumericAxisLabelStyle" TargetType="{x:Type chartingToolkit:NumericAxisLabel}">
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="StringFormat" Value="{}{0:N0}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type chartingToolkit:NumericAxisLabel}">
                        <TextBlock Text="{TemplateBinding FormattedContent}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="sbFadeInChart">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="chart">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="chart">
                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Collapsed</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.1">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="chart">
                <EasingThicknessKeyFrame KeyTime="0" Value="200,0,-200,0"/>
                <EasingThicknessKeyFrame KeyTime="0:0:0.6" Value="0,0,0,0"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="sbFadeOutChart">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="chart">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="chart">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.6">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.6">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Collapsed</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>
    <ScrollViewer HorizontalScrollBarVisibility="Auto" DataContext="{Binding}" >
        <Grid x:Name="chartGrid" Style="{StaticResource ContentRoot}"  MinWidth="468"  >
            <Grid.RowDefinitions>
                <RowDefinition Height=".5*"/>
                <RowDefinition Height="2.2*"/>
                <RowDefinition Height="1.3*"/>
            </Grid.RowDefinitions>
            <chartingToolkit:Chart x:Name="chart"  Grid.Row="1" Margin="0,0,80,0"
                                   Background="Transparent"  BorderBrush="Transparent" BorderThickness="0"
                                   Foreground="DarkBlue"  IsEnabled="True">
                <i:Interaction.Triggers>
                    <ei:DataTrigger  Binding="{Binding HasItems}" Value="True" Comparison="Equal">
                        <ei:ControlStoryboardAction Storyboard="{StaticResource sbFadeInChart}"/>
                    </ei:DataTrigger>
                    <ei:DataTrigger Binding="{Binding HasItems}" Value="False" Comparison="Equal">
                        <ei:ControlStoryboardAction Storyboard="{StaticResource sbFadeOutChart}"/>
                    </ei:DataTrigger>
                </i:Interaction.Triggers>
                <chartingToolkit:LineSeries Title="npv"  
                                            ItemsSource="{Binding NetPresentValues}" 
                                            DependentValueBinding="{Binding Value}" 
                                            IndependentValueBinding="{Binding DiscountRateLevel, Converter={StaticResource PercentConverter}, StringFormat=\{0:N2\}}"
                                            IsSelectionEnabled="True" >
                    <chartingToolkit:LineSeries.IndependentAxis>
                        <chartingToolkit:LinearAxis Orientation="X" Title="discount rate levels %"  />
                    </chartingToolkit:LineSeries.IndependentAxis>
                    <chartingToolkit:LineSeries.DependentRangeAxis>
                        <chartingToolkit:LinearAxis Orientation="Y" Title="net present values" 
                                                    AxisLabelStyle="{StaticResource NumericAxisLabelStyle}"/>
                    </chartingToolkit:LineSeries.DependentRangeAxis>
                </chartingToolkit:LineSeries>
            </chartingToolkit:Chart>
        </Grid>
    </ScrollViewer>
</UserControl>
